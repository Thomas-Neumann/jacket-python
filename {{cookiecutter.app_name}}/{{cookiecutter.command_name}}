#!/usr/bin/env python3
"""
CLI frontend for {{cookiecutter.pypackage_name}}

{{cookiecutter.description}}

usage:
    ./{{cookiecutter.command_name}} --help
"""

# standard imports
import argparse
import logging
import os
import sys

from typing import Dict, List, Optional

# extra imports (make sure to add them to requirements.txt!)
import colorama
import coloredlogs
import yaml

sys.path.insert(0, os.path.dirname(__file__) + "/src")

# pylint: disable=wrong-import-position
import {{cookiecutter.pypackage_name}}

LH = logging.getLogger(__name__)


def configure_loghandle(lh: logging.Logger, level: str = 'INFO') -> None:
    """
    configure a nice format for command line logging -> 'I: <message>'
    """
    # documentation: https://pypi.org/project/coloredlogs/
    colorama.init()
    coloredlogs.install(logger=lh, level=level, fmt='%(levelname).1s: %(message)s')


def read_yamlfile(filename: str) -> Dict:
    """
    read the provided file and parse as YAML
    """
    with open(filename, 'r') as fh:
        content = yaml.safe_load(fh)
    return content


if __name__ == "__main__":
    configure_loghandle(LH)

    # documentation: https://docs.python.org/3/library/argparse.html
    parser = argparse.ArgumentParser(description='{{cookiecutter.description}}', allow_abbrev=False)
    # <some example parameters>
    parser.add_argument('--version', action='version', version=f"%(prog)s v{{ '{' }}{{cookiecutter.pypackage_name}}.VERSIONSTRING{{ '}' }}")
    parser.add_argument('values', metavar='[VALUES]', nargs='*', help="multiple command line parameters")
    # </some example parameters>
    args = parser.parse_args()

    try:
        # <this is just an example - replace as needed>
        result = {{cookiecutter.pypackage_name}}.{{cookiecutter.main_function}}(args.values)
        if result is not None:
            print(result)
        # </this is just an example - replace as needed>
    except KeyboardInterrupt:
        logging.debug("Ctrl-C detected. Terminating.")
        sys.exit(1)
